server.port=8081

spring.data.mongodb.uri=${MOGODB_URI}

#JWT Token
jwt.secret-key=${JWT_SECRET}

#Cloudcarafka
spring.kafka.bootstrap-servers=glider.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=${KAFKA_CONFIG}

#Spring Cloud Stream
spring.cloud.function.definition=receiveProfile;receiveDataFromComment;receiveDataFromSolution;sendData;
#IN (Group1)
# authenticated Profile from Accounting ->
spring.cloud.stream.bindings.receiveProfile-in-0.destination=${KAFKA_KEY}-authenticated
spring.cloud.stream.bindings.receiveProfile-in-0.group=${KAFKA_KEY}-authenticatedGroup1
# Comment data ->
spring.cloud.stream.bindings.receiveDataFromComment-in-0.destination=${KAFKA_KEY}-commentData
spring.cloud.stream.bindings.receiveDataFromComment-in-0.group=${KAFKA_KEY}-commentDataGroup1
# Solution data ->
spring.cloud.stream.bindings.receiveDataFromSolution-in-0.destination=${KAFKA_KEY}-solutionData
spring.cloud.stream.bindings.receiveDataFromSolution-in-0.group=${KAFKA_KEY}-solutionDataGroup1

#OUT
# To deliver Problem data to all Services ->
spring.cloud.stream.bindings.sendData-out-0.destination=${KAFKA_KEY}-problemData

spring.kafka.consumer.auto-offset-reset=earliest